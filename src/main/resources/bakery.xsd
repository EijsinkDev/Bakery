<?xml version="1.0" encoding="UTF-8"?>
<xs:schema targetNamespace="xml.my.bakery.com"
		xmlns:xs="http://www.w3.org/2001/XMLSchema"  
		xmlns:jxb="http://java.sun.com/xml/ns/jaxb"
		xmlns:bakery="xml.my.bakery.com"
		xmlns:ci="http://jaxb.dev.java.net/plugin/code-injector"
		jxb:extensionBindingPrefixes="ci"
		jxb:version="2.1">
	<xs:element name="productlist">
		<xs:annotation>
			<xs:appinfo>
				<jxb:class name="ProductList"/>
			</xs:appinfo>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element name="product" type="bakery:product" minOccurs="0" maxOccurs="unbounded"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="product" abstract="true">
		<xs:annotation>
			<xs:appinfo>
				<ci:code>
					<![CDATA[
	/**
	* 
	*/
	@Override
	public String toString(){
		String str = name;
		if(getIngredientlist()!=null){
			str += getIngredientlist().toString();
		}else{
			str +="()";
		}
						
		return str;
	}
	]]>
				</ci:code>
			</xs:appinfo>
		</xs:annotation>
		<xs:sequence>  
			<xs:element type="bakery:ingredientlist" name="ingredientlist" minOccurs= "1" maxOccurs= "1"/>
		</xs:sequence>
		<xs:attribute name="name" type="xs:string" use="required"/>
	</xs:complexType>
	<xs:complexType name="bread">
		<xs:complexContent>
			<xs:extension  base="bakery:product">
				<xs:attribute name="slices" type="xs:int" use="required"/>
			</xs:extension >
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="cookie">
		<xs:complexContent>
			<xs:extension  base="bakery:product">
				<xs:attribute name="crunchy" type="xs:boolean" use="required"/>
			</xs:extension >
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="cake">
		<xs:annotation>
			<xs:appinfo>
				<ci:code>
					<![CDATA[
	/**
	* 
	*/
	@Override
	public String toString(){
		String str = super.toString();
		if(glaze != null){
			str += "\n+" + glaze.toString();
		}
		
		return str;
	}
	]]>
				</ci:code>
			</xs:appinfo>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension  base="bakery:product">
				<xs:sequence>  
					<xs:element type="bakery:glaze" name="glaze" maxOccurs="1"/>
				</xs:sequence>
			</xs:extension >
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="glaze">
		<xs:complexContent>
			<xs:extension  base="bakery:product">
			</xs:extension >
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="ingredientlist">
		<xs:annotation>
			<xs:appinfo>
				<jxb:class name="IngredientList"/>
				<ci:code>
					<![CDATA[
	/**
	* 
	*/
	@Override
	public String toString() {
		String str = "( ";
		boolean notFirst = false; 
		for (Ingredient ing : getIngredient()) {
			if(notFirst){
				str += ", ";
			}
			else{
				notFirst = true;
			}
			str += ing.toString();
		}
		return str + " )";
	}
	]]>
				</ci:code>
			</xs:appinfo>
		</xs:annotation>
		<xs:sequence>  
			<xs:element type="bakery:ingredient" name="ingredient" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ingredient">
		<xs:annotation>
			<xs:appinfo>
				<jxb:class name="Ingredient"/>
				<ci:code>
					<![CDATA[
	/**
	* 
	*/
	@Override
	public String toString() {
		if(unit==Unit.NUMBER){
			return "" + number + " " + name;
		}
		return "" + number + " " + unit.value() + " " + name;
	}
	]]>
				</ci:code>
			</xs:appinfo>
		</xs:annotation>
		<xs:attribute name="unit" type="bakery:unit" use="required"/>
		<xs:attribute name="number" type="xs:double" use="required"/>
		<xs:attribute name="name" type="xs:string" use="required"/>
	</xs:complexType>
	<xs:simpleType name="unit">
		<xs:restriction base="xs:string">
			<xs:enumeration value="gram" />
			<xs:enumeration value="tablespoon" />
			<xs:enumeration value="teaspoon" />
			<xs:enumeration value="pinch" />
			<xs:enumeration value="cup" />
			<xs:enumeration value="number" />
		</xs:restriction>
	</xs:simpleType>
</xs:schema>
